require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

require 'rails_helper'

RSpec.describe ProductsController, type: :request do
  let(:sleek_concrete_watch) { create(:product, :sleek_concrete_watch) }
  let(:mediocre_wooden_chair) { create(:product, :mediocre_wooden_chair) }
  let!(:products) { FactoryBot.create_list :product, 6 }
  let(:category) { create(:category) }

  describe 'GET #index' do
    it 'returns a successful response' do
      get category_products_path(category_id: category.id)
      expect(response).to be_successful
    end

    it 'assigns @products with paginated collection' do
       get category_products_path(category_id: category.id)
       expect(assigns(:products)).to eq(products)
    end
  end

  describe 'GET #show' do
    it "is successful" do
      get category_product_path(id: sleek_concrete_watch.id, category_id: category.id)

      expect(response).to be_successful
      expect(response).to render_template(:show)
      expect(response.body).to include(sleek_concrete_watch.name)
      expect(response.body).to include(sleek_concrete_watch.price.to_s)
    end
  end
end
